name: Production Workflow

on:
  push:
    branches:
      - main

jobs:
  lint_test_and_build:
    runs-on: ubuntu-latest

    environment: Production

    strategy:
      matrix:
        go-version: [1.21.x]

    steps:
      - uses: actions/checkout@v4

      - name: ⚙️ Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: ✍🏿 Create .env file
        run: |
          echo "ENVIRONMENT=production" > .env
          echo "DB_DNS=${{ secrets.DB_DNS }}" >> .env

      - name: ⏳ Install dependencies
        run: go mod download

      - name: 🔍 Lint
        run: go vet ./...

      - name: 👨🏿‍⚕️ Run test and generate coverage
        run: go test -race -covermode atomic -coverprofile=covprofile ./...

      - name: ⏳ Install coveralls
        run: go install github.com/mattn/goveralls@v0.0.12

      - name: 📈 Send coverage to coveralls
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        run: goveralls -coverprofile=covprofile -service=github

      - name: 👷🏿 Build
        run: go build cmd/crm/main.go

      - name: 📦 Archive
        uses: actions/upload-artifact@v3
        with:
          name: crm
          path: .

  deploy_to_gae:
    needs: lint_test_and_build

    runs-on: ubuntu-latest

    environment: Production

    permissions:
      contents: read
      id-token: write

    steps:
      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: ⚙️ Setup Google Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Use GCloud CLI
        run:
          gcloud info

          # export_default_credentials: true
      # - name: 📦 Download artifact
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: crm
      # - id: 'auth'
      #   uses: 'google-github-actions/auth@v2'

      # - name: ⚙️ Setup Google Cloud SDK
      #   uses: "google-github-actions/setup-gcloud@v2"
      #   with:
      #     project_id: ${{ secrets.GCP_PROJECT_ID }}

      #     service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      #     export_default_credentials: true
